**** html **** 
		
			1) http://www.w3schools.com
			2) Hyper Test MarkUp Language
				<이름>데이터</이름>  -> 엘리먼트(element)
				시작태그    끝태그
				
			3) 문법
				(1) 확장자를 .htm이나 .html로 작성
				(2) <html>
						<head>
							<meta></meta>
							<title></title>
						</head>
								
						<body>
						</body>
					</html>
				
		    4) 규칙
		    	1. 태그명은 소문자
		    	2. 속성값에는 "",''를 사용
		    	3. 태그는 시작태그와 끝태그로 이루어져야한다.
		    	4. single value는 사용금지(속성명="속성값"으로 사용)
		    	5. style 사용할것
		    	
		   5) 태그정보
		    	(1) title : 웹 상단 제목 
				(2) content : 문서가 어떤 형태인지 알려줌 (컨텐츠의 타입)
				(3) h1~h6 :글자크기(내림차순)[ 속성 :align="위치"]
			 	(4) hr : 선긋기[ 속성 : size="", width="", color="", aligh=""]
				(5) br : 줄바꿈
				(6) p : 문단[ 속성 :align="위치"]
				(7) b , strong:두껍게
				(8) u : 밑줄
				(9) strike : 관통선
				(10) i :이탤릭
				(11) [속성 type="a" start="시작순번"]		
					<ol>
						<li>사과</li>
						<li>포도</li>
					</ol>
													
					<ul>
						<li>사과</li>
						<li>포도</li>
					</ul>
				 (12) font color="green" face="궁서체" size="1"
				 (13) 엔티티 ( &엔티티명;)
				 		&nbsp;
						&lt; &gt;
						&quot; -> " 
						&copt;
				 (14) pre -> 원하는데로 출력, 태그 유효.
				 (15) xmp -> 원하는데로 출력, 태그 무효.
				 (16) img src="경로" border="" width="" hieght="" hspace="" vspace="" alt="이야기"
				 	
				 (17) <a href="" target="_self"></a>
					   <a href="" target="_blank"></a>
				 (18) <a name=""></a>	
					  <a href="경로#name" ></a> -> 다른페이지일때
					  <a href="#name" ></a> -> 같은페이지일때
					  
				 (19) <a href="경로" ></a> -> 동영상
				 (20) <a href="경로" ></a> -> 압축파일
				 (21) <a href="경로" ></a> -> 메인 클라이언트 실행
				 (22) 이미지맵
				      <img src="경로">
						<map name="">
							<area shape="" coords="" href="경로" target="" alt=>
						</map>
				 (23) table(테이블)
				 
				 		
	i frame(inline frame) 부분적으로 구성가능(동적)
			ex) <iframe src="" width="" height="" frameborder="1" scrolling="auto">여기는 iframe 영역</iframe>
					src
					width
					height
					frameborder
					scrolling="yes,no,auto"
					marginwidth
					marginheight
					vspace : iframe안의 상하 여백
					hspace : iframe안의 좌우 여백


**** CSS :Cascading Style Sheet		****



		1. 목적
			1) 디자인의 표준화
			2) 디자인 재활용
			
		2. 사용방법
			1)External Style Sheet
				- 별도의 css파일 만들어 불러서 사용하는방법
			2)Internal Style Sheet
				- 하나의 페이지에 단 한번만 정의됨으로써 같은 페이지 내에서는 동일한 디자인을 재사용 할 수 있다.
				- <style>이라는 태그를 통해서 작성
			3) Inline Style
				- 태그 안에서 직접 작성하는 방식
				- style이라는 속성을 통해 작성하는 방식
				
		3. 문법
			Selector{}
			
		4. property
			(1) FONT 관련
				1) font-family
				2) font-size
				3) font-style : normal, italic, oblique
				4) font-weight : 폰트의 굵기
				5) line-height : 줄간격
				6) font-variant : 텍스트를 작은 대문자로 보기
				
			(2) 색상 관련

				2) background-color
				3) background-image
				4) background-repeat : 배경 이미지의 반복여부
				5) background-attachment : 배경 이미지의 고정여부
				6) background-position : 배경 이미지의 시작위치 지정
				7) bakcground : 복합 속성 값
				
			(3) 텍스트 관련
				1) text-transform : 텍스트를 대문자 또는 소문자로 변환
				2) text-align
				3) text-indent : 문단의 들여쓰기 지정
				4) text-decoration : 텍스트에 더해지는 장식효과
				5) vetical-align
			 	6) line-height
			 	
			(4) 여백 관련
				1) 가장 바깥쪽 여백
						margin-top, margin-right, margin-left, margin-bottom
				2) 가장 안쪽 여백
						padding-top, padding-right, padding-left, padding-bottom
				3) 경계선 기준 여백(바깥쪽과 안쪽의 중간 여백)
						border-top, border-rignt, border-left, border-bottom
						border-width, border-style, border-color
				4) 내용(객체)의 크기
					width, height
					
			(5) 상속
				
				1) 독립적 상속 
						- 하나의 태그가 다른 태그를 포함할 경우, 그 포함된 태그는 포함하는 태그 스타일의 영향을 받는다.
						- 만약 상속을 거부하고자하는 경우 다시 포함된 태그에서 프로퍼티를 지정해 주면 된다.
						
				2) 선택적 상속
						- A태그안에 B태그를 포함시켜 정의하는 방슥으로 B태그는 A태그 영역에서만 유효한 값을 가진다.
						
		    
		    (6) 동일한 스타일을 여러개 지정 할 경우
		    	 변경전
		    	 A{프로퍼티;...}	
		    	 B{프로퍼티;...}	
		    	 C{프로퍼티;...}	
		    	
		    	변경후
		    	A,B,C {프로퍼티;...}	
		    
		    (7) Style sheet를 class속성으로 이용하기  -> .사용
		    		- 특정 디자인을 골라 쓰기 위한 기능
		    		
		    	1) *(all)을 이용한 class 속성 지정 가능
		    			- 특정 태그를 위한 것이 아니라 어떤 객체에서도 stylesheet를 기져다 사용할 수 있게 하기 위한 기능
		    		
		    		
		    		
		    (8) Styleesheet를 id속성으로 이용하기 -> #사용
		    
		    (9) 정렬
		    		- align
		    		- float
		    		
		    -> http://www.blognews.co.kr/htmlschool
		    
		   



*JavaScript(JS) 
				->http://math88.com.ne.kr/computer/js/JSmanual/ (자바스크립트)
				->http://www.deadfire.net/index.html (HTML/JAVA/CSS/JS)
				
				DHTML을 위한 script language 
				인터프리터 형식

				
				1. 사용 방법
					(1) inline style
							- 특정 태그안에서 작성
							
					(2) internal style
							- 한 페이지내에서 적용하기 위해 작성
							
					(3) external style 
							- 별도의 파일(.js)로 작성
							
				2. 정리
					
					(1) document.write();
					(2) alter();
					(3) 이벤트
							onblur : 입력 양식에서 포커스가 다른 곳으로 이동했을 때 발생되는 이벤트
							onclick : 입력 양식이나 링크를 클릭했을 때 발생되는 이벤트 
							onfocus :  입력 양식 필드로 포커스가 들어왔을 때 발생되는 이벤트 
							onload : 브라우저에 페이지가 읽혀졌을 때 발생되는 이벤트
							onmouseover : 입력양식이나 링크위로 마우스가 지나갈때 발생되는 이벤트
							onselect : 입력양식의 한 필드를 선택했을 때 발생되는 이벤트
							onsubmit : 입력양식을 서버로 보낼 때 발생되는 이벤트
							onunload : 브라우저에서 페이지가 없어졌을 때 발생되는 이벤트
							onabort : 이미지를 읽다가 중단시켰을때 발생되는 이벤트
							onerror : 문서나 이미지를 읽다가 중단시켰을 때 발생되는 이벤트
							onmouseout : 마우스가 특정 영역안에 있다가 나갔을 때 발생되는 이벤트
							onreset : 입력양식을 리셋시켰을때 발생되는 이벤트
							ondbclick : 
							ondragdrop : 마우스를 클릭한 상태에서 움직였을 때 발생되는 이벤트
							onkeydown : 키를 눌렸을 때 발생되는 이벤트
							onkeypress : 키를 입력 했을 때 발생되는 이벤트
							onkeyup : 키를 눌렀다 떼었을 때 발생되는 이벤트
							onmousedown : 마우스 버튼을 눌렀을 때 발생되는 이벤트
							onmousemove : 마우스를 움직였을 때 발생되는 이벤트
							onmouseup : 마우스 버튼을 눌렀다 떼 었을 때 발생되는 이벤트
							onmove : 윈도우를 움직였을 때 발생되는 이벤트
							onresize : 윈도우의 크기를 변경하였을때 발생되는 이벤트
					
					
				3. 변수, 연산자
					(1) 별도의 자료형을 사용하지 않는다.
					(2) 선언 방법
						1) 암시적
							i = 10;
							
						2) 명시적
							var i;
							
					(3) ===
					  ex) A === B
					  		: A와 B의 값이 같은지를 비교하고 형식도 같은지 비교한다.
					  		
					  		
				4. 함수(메서드)
					(1) 문법
							function 함수명(...){
									코드
									...
									[return 반환값]		
							}	
							
			  	 	(2) 변수
			  	 			1) 지역변수	: 명시적이면 지역						
			  	 			2) 전역변수	: 묵시적은 위치상관없이 전역		
			  	 			
			  	 	(3) 내장 함수
			  	 			1) confirm(), prompt() : 메시지와 관련된 함수
			  	 			2) eval() : 작성된 문자열을 자바스크립트 코드로 검증 및 교정 
			  	 			3) parselnt(), parseFloat()
			  	 			4) String(), Number()
			  	 			5) isNaN(), inFinite() : isNaN 숫자반별
			  	 			6) escape(), unescape() : 알파벳과 숫자 및 * @ - _ + . /를 제외한 문자를 모두 
			  	 									  16진수 문자로 바꾸어 주거나 다시 원상태로 복구
			  	 									  URL이나 쿠키 문자열과의 충돌을 피하기 위해서 사용함.
  	 									  
			  	 5. 객체
			  	 	(1)내장 객체
			  	 			1) Array 객체
			  	 					- 1차원 배열만 지원
			  	 							myarr =new Array(10);
			  	 							---------------------
			  	 				 			myarr = new Array();
			  	 							myarr[0] = 값;
			  	 							...
			  	 							---------------------
			  	 							myarr = new Array(배열1, 배열2,...);
			  	 					- 속성과 메서드
			  	 							length
			  	 							concat(), join(), reverse(), sort(), slice();
			  	 							
			  	 							
			  	 			2) Date 객체
			  	 					getFullYear(), getMonth(), getDate(), getDay(),
			  	 					getHours(), getMinutest(), getSeconds(), getTime(), setter 메서드도 존재
			  	 			3) Math 객체
			  	 			4) String 객체
			  	 					anchor(), bold(), fontcolor(), fontsize(),
			  	 					italics(), link(), toLowerCase(), toUpperCase()
			  	 					charAt(), concat(), indexOf(), lastIndexOf(),
			  	 					split(), substring(), substr(),.....
			  	 			5) Screen 객체
			  	 					availHeight, availWidth, height, width, 
			  	 					colorDepth(사용가능한 색상수), PixelDepth(픽셀당 피트수)
			  	 					
			  	 			 6) 객체와 함께 쓰면 참 좋은 문법
									   for~in 제어문
									   with statement
				 
					 
					 (2) 브라우저 객체
								     parent
									 frame
									 self
									 top
							 	     document
							 	     		link
							 	     		anchor
							 	     		image
							 	     		applet
							 	     		form
							 	     				text
							 	     				textarea
							 	     				checkbox
							 	     				radio
							 	     				select
							 	     				button
							 	     				sumbit
							 	     				reset
							 	     				password
							 	     				hidden
									 	     layer
									 	     area
											 location
											 history
											 navigator
												 
									
									1) Window 객체 
										
									    open(), close(), 
									    moveTo(x,y) : 지정된 위치로 윈도우의 위치를 이동
									    moveBy(x,y) : 지정된 픽셀수만큼 윈도우의 위치를 이동
									    resizeTo(x,y) : 지정된 크기로 윈도우 자체의 크기를 변경 
									    resizeBy(x,y) :괄호안에서 지정된 크기만큼씩 윈도우 자체의 크기를 변경
									    scrollBy() : 지정된 크기만큼 문서의 내용을 스크롤 시켜주는 메소드
									    scrollTo() : 메소드는 괄호안에서 지정된 위치로 창을 스크롤 시켜주는 메소드 
									 	alert() : 경고창(alert box)
									 	confirm() : 메시지를 방문자들에게 보여주고 확인/취소를 선택하면 특별한 행동을 할 수 있게 해 주는 확인상자
									 	prompt() :  prompt창 호출
									 	print() : 브라우저의 프린트 버튼을 클릭한 것과 동일한 효과  
									 	focus(), blur() : blur() 와 focus() 메소드는 현재창에 포커스를 주거나 해제하는 기능
									 	setTimeout("메소드", 시간) :  시간 후 한번만 호출,
									 	setInterval("메소드", 시간) : 반복하여 호출 ,
									 	clearTimeout(), status(), closed(), defaultStatus(), 
									 	opener(), name() : opener 프로퍼티는 팝업창에서 팝업창을 열어준 윈도우를 참조할 때 사용되는 프로퍼티입니다. 
									 						반대로 opener에서 팝업윈도우를 참조할 때는 팝업윈도우의 name 이 아닌, 팝업윈도우의 변수값을 참조
									 						
									 2) location 객체
									 
									 			- 속성
									 					hash, host, hostname, href, pathname, port, protocol, search
									 			- 메소드
									 					reload() : 새로고침
									 					replace()
									 			- 사용법
									 					location.href="http://aaa.net";
									 					location.href="sub/sub1.html";
									 					location.reload();
									 					
									 3) history 객체
									 
									 			- history.back();
									 			
									 4)navigater 객체
									 
									 			- 속성 
									 					appCodeName : 브라우저 코드 이름을 알려줍니다 
									 					appName : 브라우저의 이름을 알려줍니다 
									 					appVersion : 브라우저의 버전정보를 알려줍니다 
									 					userAgent : 브라우저의 User Agent를 알려줍니다 
									 					platform : 사용중인 시스템 정보를 알려줍니다 
									 			- 매서드	
									 					javaEnabled() : 자바 사용이 가능한지 여부를 true, false 형태로 알려줍니다
									 						
 									5)image 객체
 									
 												- 속성
 												   		border : 이미지의 테두리 값
 												   		complete : 이미지 로드가 완료 되었는지 여부(true/false)
 												   		height : 이미지의 높이
 												   		width : 이미지의 가로크기
 												   		hspace : 이미지의 수평여백
 												   		vspace : 이미지의 수직여백
 												   		length : 이미지의 개수
 												   		lowsrc : lowsrc 로 설정한 이미지의 URL
 												   		name : 이미지의 name
 												   		src : 이미지의 URL
 												  
 												- 매서드
 														onabort : 사용자가 이미지 로딩을 중간에서 멈출때
 														onerror : 이미지 로딩중 에러가 발생했을때
 														onload : 이미지가 성공적으로 로딩되었을때
 
 										6)form 객체
 											
 												- 속성
	 												action : 폼이 제출될 URL을 지정하는 읽기/쓰기 문자열. action 속성에 의해 지정됩니다.
	 												button : 버튼 객체
	 												checkbox : 체크박스 객체
	 												elements[] : 폼의 하위 객체로 폼에 나타나는 입력 요소들의 배열
	 												elements.length : element[] 배열에 있는 항목들의 갯수
	 												encoding : 폼 데이터에 사용될 인코딩 메소드를 지정하는 읽기/쓰기 문자열. ENCTYPE 속성을 통해 지정되며 가장 자주 사용되는 디폴트 인코딩으로 application/x-www-form-urlencoded" 이 있습니다.
	 												fileupload : fileupload 객체
	 												hidden : hidden 객체
	 												length : 폼에 있는 요소(엘리먼트)의 개수. elements.length 와 같습니다.
	 												method : 폼을 제출하는 방법을 지정하는 읽기/쓰기 문자열. get 또는 post 값을 가지며 method 속성에 의해 초기에 지정됩니다.
	 												name : form 의 이름
	 												password : password 객체
	 												radio : radio 객체
	 												reset : reset 객체
	 												select : select 객체
	 												submit : submit 객체
	 												target : 폼의 제출결과를 출력할 프레임이나 창의 이름을 지정하는 읽기/쓰기 문자열입니다. _top _self _blank 같은 특별한 이름들을 target 프로퍼티와 TARGET 속성에 의해 지정합니다.]
 													text : text box 객체
 													textarea : textarea 객체
 													
 						6. css와 자바스크립트의 콜라보레이션
 						
 						..
 						7. 화면 동적 변경방법 : innerHTML
 							
 
 						8. DOM API
 							(1) 문서 객체 모델(Document Object Model, DOM)
 								: HTML 및 XML 문서를 처리하는 API(Application Programming Interface)
 								  평범한 문서를 객체화 시키는것
 								  
 							(2) www.w3.org/DOM
 							
 							(3) 정의
 									1) 문서를 객체로 표현하기 위한 표준
 									2) 이때의 문서는 주로 Markup Language를 뜻함
 									3) javascript, java, c, c# 등 다양한 언어에서 지원	
 									
 							(4) 문법 및 용어
 									1) NODE : DOM에서 표현되는 모든 것
 											- 구성 요소
 												Element								
 												Document			
 												CharacterData	- Text			
																													 											
 											- 주요 속성
 												nodeName			String
 												nodeValue			String
 												nodeType			unsigned short (양수만 가능)
 												parentNode			Node
 												childNode			NodeList
 												firstChild			Node
 												lastChild			Node
 												previousSibling		Node
 												nextSibling			Node
 												ownerDocument		Documnet
 												
 																	
 								
 									*) document ( e=Element , t=Text,단말노드)
 									
 													html
 									
 									
 								head											body
 									
 									
 						meta(e)		title(e)					span(e)			 p(e)				div(e)
 									
 									
 									title here(t)				b(t )		test(t)   span(e)	  p(e)		span(e)
 															
 															
 																						b(t)	  p(t)		 c(t)
 								
 										
 												- nodeName 과 nodeValue
 												
 												
									 			nodeType			nodeName			nodeValue
									 			-------------------------------------------------
									 			Documnet			#Documnet			x(null)
									 			Element				태그명				x(null)
									 			Text				#Text				문자열	
									 			
									 			- nodeType
									 			
									 				ELEMENT_NODE		1
									 				ATTRIBUTE_NODE		2
									 				TEXT_NODE			3
									 				DOCUMENT_NODE		9
									 				
									
								2) DOCUMENT
											- 문서 전체를 나타내는 인터페이스 			
											- Node 인터페이스를 상속받는다.
											- 추가된 속성
														documentElement			Element			루트
														
											- 함수
														getElementById()		Element			
														getElementByTagName()	NodeList
															
											- NodeList
														item(), length
														
								3) ELEMENT
											- 태그를 나타내는 인터페이스
											- 프로퍼티
														tagName					String
											- 함수
														getAttribute()			
														setAttribute()	
														remobeAttribute()		
												
									 			
								4) 문서 구조 변경
											- Document에서 Element를 생성
													createElement(태그명)				Element
													createTextNode(문자열 값)				Text
													
											- Node인터페이스의 DOM트리 변경 관련 함수
													insertBefore(추가될 노드, 현재 노드)	Node
													replaceChild(교체할 노드, 현재 노드)	Node
													removeChild(제거할 노드)				Node
													appendChild(새로 추가할 노드)			Node
													
													
						9. 사용자 정의 객체
							  	
							  	(1) 클래스 만들기
							  			class 클래스명{
							  						변수
							  						메서드
							  			}
										----------------
										클래스명 = function(파라미터,..){ 변수 초기화 및 로직 }
								
								(2) 메서드 만들기
									클래스명.prototype.매서드명 = function(파라미터,...){...}
									
								(3) Object를 이용하여 클래스 만들기
									var mem  = mem.Object();
									mem.id = "Kong";
									mem.name ="공태영";
									mem.setValue = function(id, name){
										this.id = id;
										this.name = name;
									}
								
								(4) 패키지 만들기
									var first = {};
									first.클래스명 = function(...){...}
									---------------------------------
									인스턴스 생성시
									변수명 = first.클래스명();
									-----------------------------------
									패키지를 중첩해서 만들경우
									var first = new Object;
									var second = new Object;
									first.second.클래스명 = function(...){...}
								

 		10. 이벤트
						(1) 이벤트 리스너 방식의 함수
									addEventListener(이벤트, 이벤트 핸들러, 캡쳐 타입);
									attachEvent(이벤트,이벤트 핸들러); -> 화이어 폭스, 크롬
									removeEventListener(...);
									
						(2) 이벤트 정보 구하기
									function func(e){
											...
									}
									
						(3) 마우스 버튼 구별
									
									1) click, dbclick, mouseout, mousedown, mouseup, mouseover
									2) 마우스 버튼 구별
									
											w3c 표준
											-----------
											0 : 일반 버튼(주로 왼쪽 버튼)
											1 : 추가 버튼(주로 가운데 또는 휠)
											2 : 컴텍스트 버튼(주로 오른쪽 버튼)
											
											
											IE
											-----------
											1 : 왼쪽 버튼
											2 : 오른쪽 버튼
											3 : 가운데 버튼
																				 			
		 		    	 
											which(ie를 제외한 나머지 웹브라우저)
											-----------
											1 : 왼쪽
											2 : 오른쪽
											3 : 가운데
											
						(4) 키보드 이벤트
									
									1) keydown, keyup, keypress(비표준)
									2) 프로퍼티
											keyCode, ctrlKey, shiftKey, altKey, ...
											
						(5) 이벤트 흐름 
									
									1) 3단계 : 캡쳐 단계(capturting), 대상(targeting), 버블링 단계(bubbling)


